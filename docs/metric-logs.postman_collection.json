{
	"info": {
		"_postman_id": "d0c0d407-25d8-40be-b476-e5c17a23cbeb",
		"name": "Metric Logs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12292145"
	},
	"item": [
		{
			"name": "Upload File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"(() => {",
							"  pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"  });",
							"",
							"  let payload;",
							"  try {",
							"    payload = pm.response.json();",
							"  } catch (e) {",
							"    pm.test(\"Resposta é JSON válido\", function () {",
							"      pm.expect.fail(\"Resposta não é um JSON válido: \" + e.message);",
							"    });",
							"    return;",
							"  }",
							"",
							"  const result = (payload && payload.data) ? payload.data : payload;",
							"",
							"  function setVar(key, value) {",
							"    if (value === undefined || value === null) return;",
							"    try { pm.environment.set(key, value); } catch (_) {}",
							"    try { pm.collectionVariables.set(key, value); } catch (_) {}",
							"  }",
							"",
							"  function isNonEmptyArray(a) {",
							"    return Array.isArray(a) && a.length > 0;",
							"  }",
							"",
							"  let picked = null;",
							"",
							"  if (isNonEmptyArray(result.savedMatches)) {",
							"    picked = result.savedMatches[0];",
							"",
							"    pm.test(\"Selecionou match de savedMatches\", function () {",
							"      pm.expect(picked).to.be.an(\"object\");",
							"      pm.expect(picked).to.have.property(\"matchId\");",
							"    });",
							"",
							"    setVar(\"lastMatchId\", picked.matchId);                         ",
							"    setVar(\"lastMatchUUID\", picked.id);                            ",
							"    setVar(\"lastMatchKillsCount\", Array.isArray(picked.kills) ? picked.kills.length : 0);",
							"",
							"  } else if (isNonEmptyArray(result.alreadyExists)) {",
							"    picked = result.alreadyExists[0];",
							"",
							"    pm.test(\"Selecionou match de alreadyExists (fallback)\", function () {",
							"      pm.expect(picked).to.be.an(\"object\");",
							"      pm.expect(picked).to.have.property(\"matchId\");",
							"    });",
							"",
							"    setVar(\"lastMatchId\", picked.matchId);",
							"",
							"  } else {",
							"    pm.test(\"Nenhuma partida encontrada\", function () {",
							"      pm.expect.fail(\"Nem savedMatches nem alreadyExists possuem registros.\");",
							"    });",
							"  }",
							"",
							"",
							"  if (picked) {",
							"    console.log(\"Match selecionada:\", picked);",
							"    console.log(\"Variáveis definidas:\", {",
							"      lastMatchId: pm.variables.get(\"lastMatchId\"),",
							"      lastMatchUUID: pm.variables.get(\"lastMatchUUID\"),",
							"      lastMatchKillsCount: pm.variables.get(\"lastMatchKillsCount\"),",
							"    });",
							"  }",
							"})();",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/home/matheusfrancesquini/Área de Trabalho/testenomad.txt"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/matches/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"matches",
						"upload"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ranking de Partidas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"  });",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/home/matheusfrancesquini/Área de Trabalho/testenomad.txt"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/matches/{{lastMatchId}}/ranking",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"matches",
						"{{lastMatchId}}",
						"ranking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Healtcheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"  });",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/healthcheck",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"healthcheck"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "lastMatchId",
			"value": ""
		}
	]
}